<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__input_parametrs_8h_source" xml:lang="en-US">
<title>InputParametrs.h</title>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 
2 
12 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
13 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
14 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
15 <emphasis role="preprocessor">#include&quot;<link linkend="__wifi_manager_8h">WifiManager.h</link>&quot;</emphasis>
16 <emphasis role="preprocessor">#include&lt;assert.h&gt;</emphasis>
25 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_input_parametrs">InputParametrs</link>
26 {
27 <emphasis role="keyword">public</emphasis>:
36 &#32;&#32;&#32;&#32;<link linkend="_class_input_parametrs_1ad69894f7986b7adf80c1dc3d2dba3688">InputParametrs</link>(<emphasis role="keywordtype">char</emphasis>**&#32;argv,&#32;<emphasis role="keywordtype">int</emphasis>&#32;argc):<link linkend="_class_input_parametrs_1aa91548481f15eaeee623afdb483042bb">ip_argc</link>(argc),<link linkend="_class_input_parametrs_1a099c739a0b71c059a1ce57465f550488">ip_argv</link>(argv)
37 &#32;&#32;&#32;&#32;{
38 &#32;&#32;&#32;&#32;}
46 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_input_parametrs_1a756b798df75030eef5f159b88900e9ba">executeCommand</link>();
47 
48 <emphasis role="keyword">private</emphasis>:
56 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_input_parametrs_1a9d3ba1d07e069018fcaabbbb5d343b44">find_words</link>(std::vector&lt;std::string&gt;&amp;&#32;args,&#32;std::string&amp;&#32;data,&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&#32;findable_words);
64 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_input_parametrs_1a3e5e2f95b79a8a2d0700b426864da812">get_arguments</link>(<emphasis role="keywordtype">char</emphasis>**&#32;argv,&#32;<emphasis role="keywordtype">int</emphasis>&#32;argc,&#32;std::vector&lt;std::string&gt;&amp;&#32;all_argunments);
65 
72 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_input_parametrs_1a9e96458cdc5ab59bd8b1348bc2561a8d">get_command</link>(<emphasis role="keywordtype">char</emphasis>**&#32;argv,&#32;<emphasis role="keywordtype">int</emphasis>&#32;argc);
84 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_input_parametrs_1adbb5ff2b695f1df8608af058ae8be1cd">check_arg_count</link>(<emphasis role="keywordtype">char</emphasis>**&#32;argv,&#32;<emphasis role="keywordtype">int</emphasis>&#32;argc);<emphasis role="comment">//arguments&#32;is&#32;correct</emphasis>
95 <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_input_parametrs_1ae8801a48e08ae50b33aa315e63d3e235">print_errors</link>(<emphasis role="keywordtype">int</emphasis>&#32;err_code);
109 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_input_parametrs_1a7e9242b9dde105009632e02232609abc">manual_connect_arguments</link>(std::vector&lt;std::string&gt;&amp;&#32;args,&#32;std::string&amp;&#32;data);
122 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_input_parametrs_1a39e216c81ffc8927d363bef11180ce49">is_ip</link>(std::string&#32;<link linkend="_class_input_parametrs_1a9313f87d3b33e142ca0e31799e711fa9ac4872bbcc68002400a08320bfbe09734">ip</link>);&#32;<emphasis role="comment">//not&#32;&amp;&#32;because&#32;eraseing&#32;string</emphasis>
123 
137 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_input_parametrs_1a030cfa4c12827043ad55586423f1556f">subet_reformating</link>(std::string&amp;&#32;<link linkend="_class_input_parametrs_1a9313f87d3b33e142ca0e31799e711fa9aab289660335c687680292888e037cd84">subnet</link>);
147 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_input_parametrs_1aa4440fd7b625c3eab67087fef0126827">removeSpacesFromBack</link>(std::string&amp;&#32;data);
148 
149 &#32;&#32;&#32;&#32;std::vector&lt;std::string&gt;&#32;<link linkend="_class_input_parametrs_1a46b4d7e9baa63b6d55db4d76a972b7b6">ip_arguments</link>;
150 
151 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>**&#32;<link linkend="_class_input_parametrs_1a099c739a0b71c059a1ce57465f550488">ip_argv</link>;
152 
153 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_input_parametrs_1aa91548481f15eaeee623afdb483042bb">ip_argc</link>;
154 
155 &#32;&#32;&#32;&#32;<link linkend="_class_wifi_manager">WifiManager</link>&#32;<link linkend="_class_input_parametrs_1a7f4ca6a3e45a51dc4a259bd0f58791fa">wifi_function</link>;&#32;
161 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_class_input_parametrs_1a9313f87d3b33e142ca0e31799e711fa9">Manual_connection</link>
162 &#32;&#32;&#32;&#32;{
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_input_parametrs_1a9313f87d3b33e142ca0e31799e711fa9a005a3af08773c7fc15fb0792cf184dad">essid</link>,
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_input_parametrs_1a9313f87d3b33e142ca0e31799e711fa9ac4872bbcc68002400a08320bfbe09734">ip</link>,
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_input_parametrs_1a9313f87d3b33e142ca0e31799e711fa9aab289660335c687680292888e037cd84">subnet</link>,
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_input_parametrs_1a9313f87d3b33e142ca0e31799e711fa9adc87e1b94ef6cbea98ced8137277ddfb">gtw</link>,
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_input_parametrs_1a9313f87d3b33e142ca0e31799e711fa9a5159d5de2ae328a292dfbe3982ba341f">dns</link>,
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_input_parametrs_1a9313f87d3b33e142ca0e31799e711fa9a18709b455fdfebbea0dbd1209514c35e">dns2</link>,
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_input_parametrs_1a9313f87d3b33e142ca0e31799e711fa9a4953979681e6c099c905962af8af274e">pass</link>
170 &#32;&#32;&#32;&#32;};
176 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_class_input_parametrs_1a0d5790f00adf8365ad4015eca2e8a6eb">Subnet</link>
177 &#32;&#32;&#32;&#32;{
178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_input_parametrs_1a0d5790f00adf8365ad4015eca2e8a6eba2ec77594bd0a2cd322d23078d4e9c84d">SUBNET_0</link>,
179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_input_parametrs_1a0d5790f00adf8365ad4015eca2e8a6ebac7aaf54c7d51e8089f135ec020c529c0">SUBNET_128</link>,
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_input_parametrs_1a0d5790f00adf8365ad4015eca2e8a6ebaacacf513053871fafb5938f772bafa7e">SUBNET_192</link>,
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_input_parametrs_1a0d5790f00adf8365ad4015eca2e8a6ebaaf52c97fecb010c06c1ea83fedbb17c6">SUBNET_224</link>,
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_input_parametrs_1a0d5790f00adf8365ad4015eca2e8a6eba0e438f7539ed47f97ad051640c3c4abf">SUBNET_240</link>,
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_input_parametrs_1a0d5790f00adf8365ad4015eca2e8a6eba3afc75d3828a5b4e093005eb542bb6e0">SUBNET_248</link>,
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_input_parametrs_1a0d5790f00adf8365ad4015eca2e8a6ebaf927d532f76ed7a7137d1e03bc262990">SUBNET_252</link>,
185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_input_parametrs_1a0d5790f00adf8365ad4015eca2e8a6eba699bf1abb6b13d47b83965fcb01b32ca">SUBNET_254</link>,
186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_input_parametrs_1a0d5790f00adf8365ad4015eca2e8a6eba45c0503ce0f816784ae6b5c0a637959a">SUBNET_255</link>
187 
188 &#32;&#32;&#32;&#32;};
189 };
190 
191 
</programlisting></section>
